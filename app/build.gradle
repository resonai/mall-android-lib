plugins {
    id 'java-library'
    id 'kotlin'
    id 'base'
    id 'maven-publish'
}

group = 'com.resonai.mall'
version = '1.1.0'

publishing {
    publications {
        mavenJava(MavenPublication) {
            from components.java
            groupId = 'com.resonai.mall'
            artifactId = 'mall-android-lib'
            version = '1.1.0'
        }
    }
}

java {
    sourceCompatibility = JavaVersion.VERSION_11
    targetCompatibility = JavaVersion.VERSION_11
}

// Based on https://stackoverflow.com/a/61790653
task runGenerator(type: JavaExec) {
    group = 'kotlinpoet'
    classpath = sourceSets.main.runtimeClasspath
    main = 'com.resonai.mall.GeneratePoetryKt'
    // store the output instead of printing to the console:
    standardOutput = new ByteArrayOutputStream()
    // extension method genSource.output() can be used to obtain the output:
    doLast {
        ext.generated = standardOutput.toString()
        println("done generation - ")
        println(ext.generated)
    }
}

// n.b. This requires some manual intervention to rerun the generation
task saveGeneratedSources(dependsOn: runGenerator) {
    group = 'kotlinpoet'
    // use build directory
    def outputDir = new File(sourceSets.main.java.srcDirs.first(), "com/resonai/mall")
    // or add to existing source files
    def outputFile = new File(outputDir, "Poetry.kt")
    doLast {
        if (!outputDir.exists()) {
            outputDir.mkdirs()
        }

        if (outputFile.exists()) {
            outputFile.delete()
        }

        outputFile.text = tasks.runGenerator.generated
    }

    println("Saved generated poetry to $outputFile")
}

dependencies {
    implementation libs.coroutines.core
    implementation libs.coroutines.android
    implementation libs.reflect
    implementation libs.kotlinpoet

    testImplementation libs.junit
    testImplementation libs.coroutines.test
    testImplementation libs.kotlin.test.junit

    // For more idiomatic testing! See https://medium.com/google-developer-experts/unit-testing-kotlin-flow-76ea5f4282c5
    testImplementation libs.turbine
}
